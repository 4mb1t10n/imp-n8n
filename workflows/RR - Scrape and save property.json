{
  "active": false,
  "connections": {
    "Try finding existing properties": {
      "main": [
        [
          {
            "node": "Count",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Property": {
      "main": [
        [
          {
            "node": "Scrape Log Success",
            "type": "main",
            "index": 0
          },
          {
            "node": "Extract Image URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Property": {
      "main": [
        [
          {
            "node": "Update Scrape Log",
            "type": "main",
            "index": 0
          },
          {
            "node": "Extract Image URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Count": {
      "main": [
        [
          {
            "node": "Number of properties found",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scrape Rapid API": {
      "main": [
        [
          {
            "node": "Try finding existing properties",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Scrape Log Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Image URLs": {
      "main": [
        [
          {
            "node": "Insert Photos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scrape Microservice": {
      "main": [
        [
          {
            "node": "Execution Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Scrape Log": {
      "main": [
        []
      ]
    },
    "Number of properties found": {
      "main": [
        [
          {
            "node": "Create Property",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update Property",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scrape Log Success": {
      "main": [
        []
      ]
    },
    "Execution Data": {
      "main": [
        [
          {
            "node": "Scrape Rapid API",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-01-16T15:29:49.302Z",
  "id": "Dk5zxWqa5hfdmlVn",
  "meta": null,
  "name": "RR - Scrape and save property",
  "nodes": [
    {
      "parameters": {
        "operation": "update",
        "tableId": "properties_scrape_log",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $('Scrape Microservice').item.json.scrape_log_id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "success",
              "fieldValue": "=FALSE"
            },
            {
              "fieldId": "error_desc",
              "fieldValue": "={{ $json.error.code }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -860,
        340
      ],
      "id": "dff6dbe9-ef62-4727-b51e-50a8f0ee98f6",
      "name": "Scrape Log Error",
      "credentials": {
        "supabaseApi": {
          "id": "tB73GetIJaJt8VPH",
          "name": "Rent Ready Supabase"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "properties",
        "returnAll": true,
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "address_street",
              "condition": "ilike",
              "keyValue": "={{ $json.data.initialReduxState.propertyDetails.location.address.line }}"
            },
            {
              "keyName": "address_city",
              "condition": "eq",
              "keyValue": "={{ $json.data.initialReduxState.propertyDetails.location.address.city }}"
            },
            {
              "keyName": "address_state",
              "condition": "eq",
              "keyValue": "={{ $json.data.initialReduxState.propertyDetails.location.address.state_code }}"
            },
            {
              "keyName": "address_zip",
              "condition": "eq",
              "keyValue": "={{ $json.data.initialReduxState.propertyDetails.location.address.postal_code }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -860,
        140
      ],
      "id": "5a0add78-48ec-4101-a76c-31d53ebfde16",
      "name": "Try finding existing properties",
      "executeOnce": false,
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "tB73GetIJaJt8VPH",
          "name": "Rent Ready Supabase"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "properties_scrape_log",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $('Scrape Microservice').item.json.scrape_log_id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "success",
              "fieldValue": "={{ \"TRUE\" }}"
            },
            {
              "fieldId": "error_desc",
              "fieldValue": "=Scraped successfully"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        0,
        -80
      ],
      "id": "b9583a2a-dfb7-4e81-9df5-40368507689b",
      "name": "Scrape Log Success",
      "credentials": {
        "supabaseApi": {
          "id": "tB73GetIJaJt8VPH",
          "name": "Rent Ready Supabase"
        }
      }
    },
    {
      "parameters": {
        "tableId": "properties",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "address_street",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.location.address.line }}"
            },
            {
              "fieldId": "address_city",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.location.address.city }}"
            },
            {
              "fieldId": "address_state",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.location.address.state_code }}"
            },
            {
              "fieldId": "address_zip",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.location.address.postal_code }}"
            },
            {
              "fieldId": "prop_size_inside",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.description.sqft }}"
            },
            {
              "fieldId": "prop_year",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.description.year_built }}"
            },
            {
              "fieldId": "realtor_id",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.property_id }}"
            },
            {
              "fieldId": "realtor_url",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.href }}"
            },
            {
              "fieldId": "realtor_status",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.status }}"
            },
            {
              "fieldId": "beds",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.description.beds }}"
            },
            {
              "fieldId": "baths",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.description.baths }}"
            },
            {
              "fieldId": "garage",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.description.garage }}"
            },
            {
              "fieldId": "stories",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.description.stories }}"
            },
            {
              "fieldId": "realtor_dwelling_type",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.description.type }}"
            },
            {
              "fieldId": "realtor_last_sold_date",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.last_sold_date }}"
            },
            {
              "fieldId": "realtor_last_sold_price",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.last_sold_price }}"
            },
            {
              "fieldId": "realtor_list_price",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.list_price }}"
            },
            {
              "fieldId": "address_neighborhood",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.location.neighborhoods[0].name }}"
            },
            {
              "fieldId": "coord_lat",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.location.address.coordinate.lat }}"
            },
            {
              "fieldId": "coord_lng",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.location.address.coordinate.lon }}"
            },
            {
              "fieldId": "prop_size_outside",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.description.lot_sqft }}"
            },
            {
              "fieldId": "timestamp_updated",
              "fieldValue": "={{ $now }}"
            },
            {
              "fieldId": "timestamp_created",
              "fieldValue": "={{ $now }}"
            },
            {
              "fieldId": "last_edited_by",
              "fieldValue": "={{ $('Scrape Microservice').item.json.user }}"
            },
            {
              "fieldId": "scrape_source",
              "fieldValue": "Realtor.com"
            },
            {
              "fieldId": "timestamp_scraped",
              "fieldValue": "={{ $now }}"
            },
            {
              "fieldId": "realtor_desc",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.description.text }}"
            },
            {
              "fieldId": "is_contingent",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.flags.is_contingent }}"
            },
            {
              "fieldId": "is_foreclosure",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.flags.is_foreclosure }}"
            },
            {
              "fieldId": "is_pending",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.flags.is_pending }}"
            },
            {
              "fieldId": "is_short_sale",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.flags.is_short_sale }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -220,
        0
      ],
      "id": "1f91a05b-fe23-4f66-a4b4-de118521df2f",
      "name": "Create Property",
      "credentials": {
        "supabaseApi": {
          "id": "tB73GetIJaJt8VPH",
          "name": "Rent Ready Supabase"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "properties",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $('Try finding existing properties').item.json.id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "prop_size_inside",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.description.sqft }}"
            },
            {
              "fieldId": "prop_year",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.description.year_built }}"
            },
            {
              "fieldId": "realtor_id",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.property_id }}"
            },
            {
              "fieldId": "realtor_url",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.href }}"
            },
            {
              "fieldId": "realtor_status",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.status }}"
            },
            {
              "fieldId": "beds",
              "fieldValue": "={{ $('Try finding existing properties').item.json.beds !== null \n  ? $('Try finding existing properties').item.json.beds\n  : $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.description.beds }}"
            },
            {
              "fieldId": "baths",
              "fieldValue": "={{ $('Try finding existing properties').item.json.baths !== null \n  ? $('Try finding existing properties').item.json.baths\n  : $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.description.baths }}"
            },
            {
              "fieldId": "garage",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.description.garage }}"
            },
            {
              "fieldId": "stories",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.description.stories }}"
            },
            {
              "fieldId": "realtor_dwelling_type",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.description.type }}"
            },
            {
              "fieldId": "realtor_last_sold_date",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.last_sold_date }}"
            },
            {
              "fieldId": "realtor_last_sold_price",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.last_sold_price }}"
            },
            {
              "fieldId": "realtor_list_price",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.list_price }}"
            },
            {
              "fieldId": "address_neighborhood",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.location.neighborhoods[0].name }}"
            },
            {
              "fieldId": "coord_lat",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.location.address.coordinate.lat }}"
            },
            {
              "fieldId": "coord_lng",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.location.address.coordinate.lon }}"
            },
            {
              "fieldId": "prop_size_outside",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.description.lot_sqft }}"
            },
            {
              "fieldId": "timestamp_updated",
              "fieldValue": "={{ $now }}"
            },
            {
              "fieldId": "timestamp_created",
              "fieldValue": "={{ $now }}"
            },
            {
              "fieldId": "last_edited_by",
              "fieldValue": "={{ $('Scrape Microservice').item.json.user }}"
            },
            {
              "fieldId": "scrape_source",
              "fieldValue": "Realtor.com"
            },
            {
              "fieldId": "timestamp_scraped",
              "fieldValue": "={{ $now }}"
            },
            {
              "fieldId": "realtor_desc",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.description.text }}"
            },
            {
              "fieldId": "address_neighborhood",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.location.neighborhoods[0].name }}"
            },
            {
              "fieldId": "is_contingent",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.flags.is_contingent }}"
            },
            {
              "fieldId": "is_foreclosure",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.flags.is_foreclosure }}"
            },
            {
              "fieldId": "is_pending",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.flags.is_pending }}"
            },
            {
              "fieldId": "is_short_sale",
              "fieldValue": "={{ $('Scrape Rapid API').item.json.data.initialReduxState.propertyDetails.flags.is_short_sale }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -220,
        240
      ],
      "id": "49dfba4d-1c0f-459e-99c4-1a52e3a718d3",
      "name": "Update Property",
      "credentials": {
        "supabaseApi": {
          "id": "tB73GetIJaJt8VPH",
          "name": "Rent Ready Supabase"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "if (Object.keys(items[0].json).length === 0) {\nreturn [\n\t{\n\t\tjson: {\n\t\t\tresults: 0,\n\t\t}\n\t}\n]\n}\nreturn [\n\t{\n\t\tjson: {\n\t\t\tresults: items.length,\n\t\t}\n\t}\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -640,
        140
      ],
      "id": "70545f2d-1648-42b4-b5c8-cbb65c121aaa",
      "name": "Count"
    },
    {
      "parameters": {
        "url": "https://realtor-search.p.rapidapi.com/properties/detail-url",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "url",
              "value": "={{ $json.scrape_url }}"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-rapidapi-host",
              "value": "realtor-search.p.rapidapi.com"
            },
            {
              "name": "x-rapidapi-key",
              "value": "6ba3b66dbamshc1928a7b00fd64bp146222jsn36479c7c5a77"
            },
            {
              "name": "Host",
              "value": "realtor-search.p.rapidapi.com"
            }
          ]
        },
        "options": {}
      },
      "id": "dca5a573-d65f-4433-9b6c-275e02625a68",
      "name": "Scrape Rapid API",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1120,
        140
      ],
      "retryOnFail": true,
      "waitBetweenTries": 3000,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "jsCode": "function extractImageUrls() {\n    try {\n        const scrapeData = $('Scrape Rapid API').all();\n        \n        // Check if all required properties exist in the path\n        if (!scrapeData?.[0]?.json?.data?.initialReduxState?.propertyDetails?.photos) {\n            return []; // Return empty array if photos don't exist\n        }\n        \n        const photos = scrapeData[0].json.data.initialReduxState.propertyDetails.photos;\n        return photos.map(photo => ({\n            href: photo.href\n        }));\n    } catch (error) {\n        // Return empty array in case of any errors\n        return [];\n    }\n}\n\nreturn extractImageUrls();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        0,
        140
      ],
      "id": "6ecc0441-b42c-4410-8838-7871a45502c7",
      "name": "Extract Image URLs",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "tableId": "properties_media",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "property_id",
              "fieldValue": "={{ $('Create Property').item.json.id }}"
            },
            {
              "fieldId": "media_url_scraped",
              "fieldValue": "={{ $json.href }}"
            },
            {
              "fieldId": "media_type",
              "fieldValue": "photo"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        220,
        140
      ],
      "id": "9f87f0b7-738b-4d7f-baf8-92b2780a8eec",
      "name": "Insert Photos",
      "credentials": {
        "supabaseApi": {
          "id": "tB73GetIJaJt8VPH",
          "name": "Rent Ready Supabase"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -1560,
        140
      ],
      "id": "f73dc483-0bd5-4596-a565-b85bd6af9a3e",
      "name": "Scrape Microservice"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "properties_scrape_log",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $('Scrape Microservice').item.json.scrape_log_id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "success",
              "fieldValue": "={{ \"TRUE\" }}"
            },
            {
              "fieldId": "error_desc",
              "fieldValue": "=Existing record updated"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        0,
        340
      ],
      "id": "f77fa921-5035-4b9e-87ea-c3b0fe6f4205",
      "name": "Update Scrape Log",
      "credentials": {
        "supabaseApi": {
          "id": "tB73GetIJaJt8VPH",
          "name": "Rent Ready Supabase"
        }
      }
    },
    {
      "parameters": {
        "content": "# Inputs\nscrape_url\nuser (email)\nscrape_log_id"
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1840,
        120
      ],
      "typeVersion": 1,
      "id": "1928987c-0446-4391-ab46-cf85c81031b4",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.results }}",
                    "rightValue": 0,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "0 results"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3f836040-e20c-4c0b-84c5-e795339645c1",
                    "leftValue": "={{ $json.results }}",
                    "rightValue": 1,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "1 result"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -440,
        140
      ],
      "id": "4d714abe-e621-4d80-ab4e-21b0a80155c5",
      "name": "Number of properties found"
    },
    {
      "parameters": {
        "dataToSave": {
          "values": [
            {
              "key": "workflow",
              "value": "Scrape Microservice"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executionData",
      "typeVersion": 1,
      "position": [
        -1340,
        140
      ],
      "id": "54d4220e-f506-4365-9bc3-d54a0b5ee296",
      "name": "Execution Data"
    }
  ],
  "pinData": {
    "Create Property": [
      {
        "json": {
          "id": 607,
          "address_street": "5888 Marin Dr",
          "address_city": "Toledo",
          "address_state": "OH",
          "address_zip": "43613",
          "prop_size_inside": 2330,
          "prop_year": 1993,
          "county_parcel": null,
          "county_tract": null,
          "prop_heating_type_air": null,
          "prop_cooking_type": null,
          "prop_heating_type_water": null,
          "property_status": "New",
          "realtor_id": 3517732046,
          "realtor_url": "https://www.realtor.com/realestateandhomes-detail/5888-Marin-Dr_Toledo_OH_43613_M35177-32046",
          "realtor_status": "for_sale",
          "beds": 3,
          "baths": 3,
          "garage": 2,
          "stories": 2,
          "realtor_desc": "Welcome to this spacious 3 bed/2.5 bath home located in Washington Local School District with over 2300 sq ft of living space. Featuring a huge remodeled kitchen with tons of cabinets with an island and quartz counters. First floor primary bedroom with a fully remodeled en suite with large double shower, double vanity with quartz, abundant cabinets & huge walk in closet. Dining room and family room with cathedral ceiling and fireplace and hardwood floors. Upper bedrooms feature huge walk-in closets and attic access. Family/Living room has access to new concrete patio. Full finished basement.",
          "realtor_dwelling_type": "single_family",
          "realtor_last_sold_date": "2015-12-31",
          "realtor_last_sold_price": 190000,
          "realtor_list_price": 325000,
          "address_neighborhood": "Whitmer-Trilby",
          "coord_lat": 41.723915,
          "coord_lng": -83.592005,
          "prop_size_outside": 8777,
          "timestamp_updated": "2025-01-16T16:13:58.565+00:00",
          "timestamp_created": "2025-01-16T16:13:58.565+00:00",
          "timestamp_followup": null,
          "starred": false,
          "last_edited_by": "alex+dev@imposbl.com",
          "followup_notes": null,
          "scrape_source": "Realtor.com",
          "offer_price": null,
          "timestamp_scraped": "2025-01-16T16:13:58.565+00:00",
          "is_off_market": null,
          "is_contingent": null,
          "is_foreclosure": null,
          "is_pending": null,
          "is_short_sale": null
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-01-16T15:30:08.032Z",
      "updatedAt": "2025-01-16T15:30:08.032Z",
      "id": "s9eEaRLrT4Knsh6d",
      "name": "microservice"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-01-22T21:42:42.107Z",
  "versionId": "671f1ed7-99b3-43ca-892f-6cc2a3ba6de3"
}