{
  "active": false,
  "connections": {
    "Try finding existing properties": {
      "main": [
        [
          {
            "node": "Count",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Property": {
      "main": [
        [
          {
            "node": "Scrape Log Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Count": {
      "main": [
        [
          {
            "node": "Number of properties found",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scrape Microservice": {
      "main": [
        [
          {
            "node": "Scrape Apify",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Scrape Log": {
      "main": [
        [
          {
            "node": "Extract Photos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Number of properties found": {
      "main": [
        [
          {
            "node": "Create Property",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update Property",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scrape Log Success": {
      "main": [
        [
          {
            "node": "Extract Photos1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Scrape Apify": {
      "main": [
        [
          {
            "node": "Try finding existing properties",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Scrape Log Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Property": {
      "main": [
        [
          {
            "node": "Update Scrape Log",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Photos": {
      "main": [
        [
          {
            "node": "set url and property id",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract History": {
      "main": [
        [
          {
            "node": "Execute Workflow3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Upload photos": {
      "main": [
        []
      ]
    },
    "set url and property id": {
      "main": [
        [
          {
            "node": "Upload photos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Photos1": {
      "main": [
        [
          {
            "node": "set url and property id1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "set url and property id1": {
      "main": [
        [
          {
            "node": "Upload photos1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-01-16T15:29:49.302Z",
  "id": "Dk5zxWqa5hfdmlVn",
  "meta": null,
  "name": "MICRO - Scrape and save property",
  "nodes": [
    {
      "parameters": {
        "operation": "update",
        "tableId": "properties_scrape_log",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $('Scrape Microservice').item.json.scrape_log_id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "success",
              "fieldValue": "=FALSE"
            },
            {
              "fieldId": "error_desc",
              "fieldValue": "={{ $json.error.code }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -860,
        240
      ],
      "id": "dff6dbe9-ef62-4727-b51e-50a8f0ee98f6",
      "name": "Scrape Log Error",
      "credentials": {
        "supabaseApi": {
          "id": "tB73GetIJaJt8VPH",
          "name": "Rent Ready Supabase"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "properties",
        "returnAll": true,
        "matchType": "allFilters",
        "filters": {
          "conditions": [
            {
              "keyName": "address_street",
              "condition": "ilike",
              "keyValue": "={{ $json.address.street }}"
            },
            {
              "keyName": "address_city",
              "condition": "eq",
              "keyValue": "={{ $json.neighborhood[0].city }}"
            },
            {
              "keyName": "address_state",
              "condition": "eq",
              "keyValue": "={{ $json.neighborhood[0].state_code }}"
            },
            {
              "keyName": "address_zip",
              "condition": "eq",
              "keyValue": "={{ $json.address.postalCode }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -860,
        40
      ],
      "id": "5a0add78-48ec-4101-a76c-31d53ebfde16",
      "name": "Try finding existing properties",
      "executeOnce": false,
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "tB73GetIJaJt8VPH",
          "name": "Rent Ready Supabase"
        }
      },
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "properties_scrape_log",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $('Scrape Microservice').item.json.scrape_log_id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "success",
              "fieldValue": "={{ \"TRUE\" }}"
            },
            {
              "fieldId": "error_desc",
              "fieldValue": "=Scraped successfully"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "b9583a2a-dfb7-4e81-9df5-40368507689b",
      "name": "Scrape Log Success",
      "credentials": {
        "supabaseApi": {
          "id": "tB73GetIJaJt8VPH",
          "name": "Rent Ready Supabase"
        }
      }
    },
    {
      "parameters": {
        "tableId": "properties",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "address_street",
              "fieldValue": "={{ $('Scrape Apify').item.json.address.street }}"
            },
            {
              "fieldId": "address_city",
              "fieldValue": "={{ $('Scrape Apify').item.json.neighborhood[0].city }}"
            },
            {
              "fieldId": "address_state",
              "fieldValue": "={{ $('Scrape Apify').item.json.neighborhood[0].state_code }}"
            },
            {
              "fieldId": "address_zip",
              "fieldValue": "={{ $('Scrape Apify').item.json.address.postalCode }}"
            },
            {
              "fieldId": "prop_size_inside",
              "fieldValue": "={{ $('Scrape Apify').item.json.sqft }}"
            },
            {
              "fieldId": "prop_year",
              "fieldValue": "={{ $('Scrape Apify').item.json.year_built }}"
            },
            {
              "fieldId": "realtor_id",
              "fieldValue": "={{ $('Scrape Apify').item.json.id }}"
            },
            {
              "fieldId": "realtor_url",
              "fieldValue": "={{ $('Scrape Apify').item.json.url }}"
            },
            {
              "fieldId": "realtor_status",
              "fieldValue": "={{ $('Scrape Apify').item.json.status }}"
            },
            {
              "fieldId": "beds",
              "fieldValue": "={{ $('Scrape Apify').item.json.beds }}"
            },
            {
              "fieldId": "baths",
              "fieldValue": "={{ $('Scrape Apify').item.json.baths }}"
            },
            {
              "fieldId": "garage",
              "fieldValue": "={{ $('Scrape Apify').item.json.garage }}"
            },
            {
              "fieldId": "stories",
              "fieldValue": "={{ $('Scrape Apify').item.json.stories }}"
            },
            {
              "fieldId": "realtor_dwelling_type",
              "fieldValue": "={{ $('Scrape Apify').item.json.type }}"
            },
            {
              "fieldId": "realtor_list_price",
              "fieldValue": "={{ $('Scrape Apify').item.json.listPrice }}"
            },
            {
              "fieldId": "address_neighborhood",
              "fieldValue": "={{ $('Scrape Apify').item.json.neighborhood[0].name }}"
            },
            {
              "fieldId": "coord_lat",
              "fieldValue": "={{ $('Scrape Apify').item.json.coordinates.latitude }}"
            },
            {
              "fieldId": "coord_lng",
              "fieldValue": "={{ $('Scrape Apify').item.json.coordinates.longitude }}"
            },
            {
              "fieldId": "prop_size_outside",
              "fieldValue": "={{ $('Scrape Apify').item.json.lot_sqft }}"
            },
            {
              "fieldId": "timestamp_updated",
              "fieldValue": "={{ $now }}"
            },
            {
              "fieldId": "timestamp_created",
              "fieldValue": "={{ $now }}"
            },
            {
              "fieldId": "last_edited_by",
              "fieldValue": "={{ $('Scrape Microservice').item.json.user }}"
            },
            {
              "fieldId": "timestamp_scraped",
              "fieldValue": "={{ $now }}"
            },
            {
              "fieldId": "realtor_desc",
              "fieldValue": "={{ $('Scrape Apify').item.json.text }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -220,
        0
      ],
      "id": "1f91a05b-fe23-4f66-a4b4-de118521df2f",
      "name": "Create Property",
      "credentials": {
        "supabaseApi": {
          "id": "tB73GetIJaJt8VPH",
          "name": "Rent Ready Supabase"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "if (Object.keys(items[0].json).length === 0) {\nreturn [\n\t{\n\t\tjson: {\n\t\t\tresults: 0,\n\t\t}\n\t}\n]\n}\nreturn [\n\t{\n\t\tjson: {\n\t\t\tresults: items.length,\n\t\t}\n\t}\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -640,
        140
      ],
      "id": "70545f2d-1648-42b4-b5c8-cbb65c121aaa",
      "name": "Count"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        -1340,
        140
      ],
      "id": "f73dc483-0bd5-4596-a565-b85bd6af9a3e",
      "name": "Scrape Microservice"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "properties_scrape_log",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $('Scrape Microservice').item.json.scrape_log_id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "success",
              "fieldValue": "={{ \"TRUE\" }}"
            },
            {
              "fieldId": "error_desc",
              "fieldValue": "=Existing record updated"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        0,
        240
      ],
      "id": "f77fa921-5035-4b9e-87ea-c3b0fe6f4205",
      "name": "Update Scrape Log",
      "credentials": {
        "supabaseApi": {
          "id": "tB73GetIJaJt8VPH",
          "name": "Rent Ready Supabase"
        }
      }
    },
    {
      "parameters": {
        "content": "# Inputs\nscrape_url\nuser (email)\nscrape_log_id"
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1620,
        120
      ],
      "typeVersion": 1,
      "id": "1928987c-0446-4391-ab46-cf85c81031b4",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.results }}",
                    "rightValue": 0,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "0 results"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3f836040-e20c-4c0b-84c5-e795339645c1",
                    "leftValue": "={{ $json.results }}",
                    "rightValue": 1,
                    "operator": {
                      "type": "number",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "1 result"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -440,
        140
      ],
      "id": "4d714abe-e621-4d80-ab4e-21b0a80155c5",
      "name": "Number of properties found"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.apify.com/v2/acts/epctex~realtor-scraper/run-sync-get-dataset-items",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "token",
              "value": "apify_api_eBcJIT4Z3eJhNHRL1UFtko2cVhff8i4fqE6a"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"extendOutputFunction\": \"($) => { return {} }\",\n    \"includeFloorplans\": false,\n    \"mode\": \"BUY\",\n    \"proxy\": {\n        \"useApifyProxy\": true\n    },\n    \"startUrls\": [\n        \"{{ $('Scrape Microservice').item.json.scrape_url }}\"\n    ]\n}",
        "options": {}
      },
      "id": "dca5a573-d65f-4433-9b6c-275e02625a68",
      "name": "Scrape Apify",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1120,
        140
      ],
      "retryOnFail": true,
      "waitBetweenTries": 3000,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "properties",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "={{ $('Try finding existing properties').item.json.id }}"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "address_street",
              "fieldValue": "={{ $('Scrape Apify').item.json.address.street }}"
            },
            {
              "fieldId": "address_city",
              "fieldValue": "={{ $('Scrape Apify').item.json.neighborhood[0].city }}"
            },
            {
              "fieldId": "address_state",
              "fieldValue": "={{ $('Scrape Apify').item.json.neighborhood[0].state_code }}"
            },
            {
              "fieldId": "address_zip",
              "fieldValue": "={{ $('Scrape Apify').item.json.address.postalCode }}"
            },
            {
              "fieldId": "prop_size_inside",
              "fieldValue": "={{ $('Scrape Apify').item.json.sqft }}"
            },
            {
              "fieldId": "prop_year",
              "fieldValue": "={{ $('Scrape Apify').item.json.year_built }}"
            },
            {
              "fieldId": "realtor_id",
              "fieldValue": "={{ $('Scrape Apify').item.json.id }}"
            },
            {
              "fieldId": "realtor_url",
              "fieldValue": "={{ $('Scrape Apify').item.json.url }}"
            },
            {
              "fieldId": "realtor_status",
              "fieldValue": "={{ $('Scrape Apify').item.json.status }}"
            },
            {
              "fieldId": "beds",
              "fieldValue": "={{ $('Scrape Apify').item.json.beds }}"
            },
            {
              "fieldId": "baths",
              "fieldValue": "={{ $('Scrape Apify').item.json.baths }}"
            },
            {
              "fieldId": "garage",
              "fieldValue": "={{ $('Scrape Apify').item.json.garage }}"
            },
            {
              "fieldId": "stories",
              "fieldValue": "={{ $('Scrape Apify').item.json.stories }}"
            },
            {
              "fieldId": "realtor_dwelling_type",
              "fieldValue": "={{ $('Scrape Apify').item.json.type }}"
            },
            {
              "fieldId": "realtor_list_price",
              "fieldValue": "={{ $('Scrape Apify').item.json.listPrice }}"
            },
            {
              "fieldId": "address_neighborhood",
              "fieldValue": "={{ $('Scrape Apify').item.json.neighborhood[0].name }}"
            },
            {
              "fieldId": "coord_lat",
              "fieldValue": "={{ $('Scrape Apify').item.json.coordinates.latitude }}"
            },
            {
              "fieldId": "coord_lng",
              "fieldValue": "={{ $('Scrape Apify').item.json.coordinates.longitude }}"
            },
            {
              "fieldId": "prop_size_outside",
              "fieldValue": "={{ $('Scrape Apify').item.json.lot_sqft }}"
            },
            {
              "fieldId": "timestamp_updated",
              "fieldValue": "={{ $now }}"
            },
            {
              "fieldId": "timestamp_created",
              "fieldValue": "={{ $now }}"
            },
            {
              "fieldId": "last_edited_by",
              "fieldValue": "={{ $('Scrape Microservice').item.json.user }}"
            },
            {
              "fieldId": "timestamp_scraped",
              "fieldValue": "={{ $now }}"
            },
            {
              "fieldId": "realtor_desc",
              "fieldValue": "={{ $('Scrape Apify').item.json.text }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        -220,
        240
      ],
      "id": "5ed402dc-db23-470d-8bdf-117963c71dad",
      "name": "Update Property",
      "credentials": {
        "supabaseApi": {
          "id": "tB73GetIJaJt8VPH",
          "name": "Rent Ready Supabase"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.1,
      "position": [
        460,
        460
      ],
      "id": "3d622943-7824-4022-b8c6-7ff5d8f1e646",
      "name": "Execute Workflow3"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "fAKNIRVusSsHh3Vc",
          "mode": "id"
        },
        "options": {
          "waitForSubWorkflow": false
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.1,
      "position": [
        700,
        240
      ],
      "id": "8078e945-4cda-4708-8abe-62ad0d695f6d",
      "name": "Upload photos"
    },
    {
      "parameters": {
        "jsCode": "function extractImageUrls() {\n    try {\n        const scrapeData = $('Scrape Apify').all();\n        console.log('Scrape data:', scrapeData);\n      \n        if (!scrapeData?.[0]?.json?.photos) {\n            console.log('No photos found in data structure');\n            return []; \n        }\n        \n        const photos = scrapeData[0].json.photos;\n        console.log('Photos array:', photos);\n        \n        const urls = photos.map(photo => ({\n            href: photo.href\n        }));\n        console.log('Extracted URLs:', urls);\n        return urls;\n    } catch (error) {\n        console.log('Error:', error);\n        return [];\n    }\n}\nreturn extractImageUrls();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        220,
        240
      ],
      "id": "1a10c5b8-0d52-4e3f-ac30-98556e8a3b34",
      "name": "Extract Photos"
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n  item.json.myNewField = 1;\n}\n\nreturn $input.all();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        220,
        460
      ],
      "id": "bfcdbbd5-15a7-43e6-b2f8-e35fdfc6cde0",
      "name": "Extract History"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "28758a61-4698-4aac-a6a8-a6ae1911a7a8",
              "name": "url",
              "value": "={{ $json.href }}",
              "type": "string"
            },
            {
              "id": "9cd1271d-cb54-44bc-ae07-44c6071729a3",
              "name": "property_id",
              "value": "={{ $('Update Property').first().json.id }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        460,
        240
      ],
      "id": "6767736c-2972-4345-8d97-deb15b075ce9",
      "name": "set url and property id"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "fAKNIRVusSsHh3Vc",
          "mode": "id"
        },
        "options": {
          "waitForSubWorkflow": false
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.1,
      "position": [
        700,
        0
      ],
      "id": "44c56aac-707e-46d7-8ad5-92da46bd2056",
      "name": "Upload photos1"
    },
    {
      "parameters": {
        "jsCode": "function extractImageUrls() {\n    try {\n        const scrapeData = $('Scrape Apify').all();\n        console.log('Scrape data:', scrapeData);\n      \n        if (!scrapeData?.[0]?.json?.photos) {\n            console.log('No photos found in data structure');\n            return []; \n        }\n        \n        const photos = scrapeData[0].json.photos;\n        console.log('Photos array:', photos);\n        \n        const urls = photos.map(photo => ({\n            href: photo.href\n        }));\n        console.log('Extracted URLs:', urls);\n        return urls;\n    } catch (error) {\n        console.log('Error:', error);\n        return [];\n    }\n}\nreturn extractImageUrls();"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        220,
        0
      ],
      "id": "a66e2ebc-a1fc-461d-b97e-5324b3ffbe0a",
      "name": "Extract Photos1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "28758a61-4698-4aac-a6a8-a6ae1911a7a8",
              "name": "url",
              "value": "={{ $json.href }}",
              "type": "string"
            },
            {
              "id": "9cd1271d-cb54-44bc-ae07-44c6071729a3",
              "name": "property_id",
              "value": "={{ $('Create Property').first().json.id }}",
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        460,
        0
      ],
      "id": "0942ef97-cf65-458c-acf3-a8a1bad2b5d9",
      "name": "set url and property id1"
    }
  ],
  "pinData": {
    "Update Property": [
      {
        "json": {
          "id": 624,
          "address_street": "248 W Crawford Ave",
          "address_city": "Toledo",
          "address_state": "OH",
          "address_zip": "43612",
          "prop_size_inside": 1152,
          "prop_year": 1927,
          "county_parcel": null,
          "county_tract": null,
          "property_status": "New",
          "realtor_id": 3676272738,
          "realtor_url": "https://www.realtor.com/realestateandhomes-detail/248-W-Crawford-Ave_Toledo_OH_43612_M36762-72738",
          "realtor_status": "for_sale",
          "beds": 3,
          "baths": 2,
          "garage": 2,
          "stories": 2,
          "realtor_desc": "This 3-bedroom single-family home is ready for your personal touch. With 1, 100 square feet of living space, this property offers plenty of room for reimagining and customization. It features solid construction and endless potential, including hardwood floors, a spacious living room, a roomy kitchen, a detached 2-car garage, and a large yard that includes a double lot.",
          "realtor_dwelling_type": "single_family",
          "realtor_list_price": 99900,
          "address_neighborhood": "Five Points - Library Village",
          "coord_lat": 41.70695,
          "coord_lng": -83.552477,
          "prop_size_outside": 4800,
          "timestamp_updated": "2025-01-24T00:06:31.883+00:00",
          "timestamp_created": "2025-01-24T00:06:31.883+00:00",
          "starred": false,
          "last_edited_by": "alex+dev@imposbl.com",
          "followup_notes": null,
          "scrape_source": null,
          "offer_price": null,
          "timestamp_scraped": "2025-01-24T00:06:31.884+00:00"
        }
      }
    ],
    "Scrape Microservice": [
      {
        "json": {
          "scrape_url": "https://www.realtor.com/realestateandhomes-detail/40-E-Oakland-St_Toledo_OH_43608_M38301-43815",
          "user": "alex+dev@imposbl.com",
          "scrape_log_id": "201"
        }
      }
    ],
    "Try finding existing properties": [
      {
        "json": {}
      }
    ],
    "Create Property": [
      {
        "json": {
          "id": 625,
          "address_street": "40 E Oakland St",
          "address_city": "Toledo",
          "address_state": "OH",
          "address_zip": "43608",
          "prop_size_inside": 1110,
          "prop_year": 1902,
          "county_parcel": null,
          "county_tract": null,
          "property_status": "New",
          "realtor_id": 3830143815,
          "realtor_url": "https://www.realtor.com/realestateandhomes-detail/40-E-Oakland-St_Toledo_OH_43608_M38301-43815",
          "realtor_status": "for_sale",
          "beds": 3,
          "baths": 1,
          "garage": 2,
          "stories": 2,
          "realtor_desc": "Check this out! Perfect for an investor or first-time homeowner. Large detached 2.5 car garage and full basement gives this house tons of storage space. Large living room and kitchen with a newer dishwasher included! Backyard is completely fenced in- perfect for the pets. Set up a time to see today!",
          "realtor_dwelling_type": "single_family",
          "realtor_list_price": 69900,
          "address_neighborhood": "Lagrange",
          "coord_lat": 41.681935,
          "coord_lng": -83.544437,
          "prop_size_outside": 3698,
          "timestamp_updated": "2025-01-24T02:21:36.881+00:00",
          "timestamp_created": "2025-01-24T02:21:36.881+00:00",
          "starred": false,
          "last_edited_by": "alex+dev@imposbl.com",
          "followup_notes": null,
          "scrape_source": null,
          "offer_price": null,
          "timestamp_scraped": "2025-01-24T02:21:36.882+00:00"
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-01-16T15:30:08.032Z",
      "updatedAt": "2025-01-16T15:30:08.032Z",
      "id": "s9eEaRLrT4Knsh6d",
      "name": "microservice"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-01-24T02:26:24.486Z",
  "versionId": "c9bb88e3-e5dd-4506-b855-1167cf321294"
}