{
  "active": true,
  "connections": {
    "Get File": {
      "main": [
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is new": {
      "main": [
        [
          {
            "node": "Create new file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Items": {
      "main": [
        [
          {
            "node": "isDiffOrNew",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Status": {
      "main": [
        [
          {
            "node": "Same file - Do nothing",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is different",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is new",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get file data": {
      "main": [
        [
          {
            "node": "If file too large",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create new file": {
      "main": [
        []
      ]
    },
    "File is different": {
      "main": [
        [
          {
            "node": "Edit existing file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If file too large": {
      "main": [
        [
          {
            "node": "Get File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit existing file": {
      "main": [
        []
      ]
    },
    "Same file - Do nothing": {
      "main": [
        []
      ]
    },
    "Globals": {
      "main": [
        [
          {
            "node": "Get file data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew": {
      "main": [
        [
          {
            "node": "Check Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Items",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Split the result": {
      "main": [
        [
          {
            "node": "Get file content from GitHub",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert files to JSON": {
      "main": [
        [
          {
            "node": "Restore n8n Workflows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get all files in given path": {
      "main": [
        [
          {
            "node": "Split the result",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get file content from GitHub": {
      "main": [
        [
          {
            "node": "Convert files to JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Globals1": {
      "main": [
        [
          {
            "node": "Get all files in given path",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for skipped Credentials": {
      "main": [
        [],
        [
          {
            "node": "Restore n8n Credentials",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Globals2": {
      "main": [
        [
          {
            "node": "Get all files in given path1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get all files in given path1": {
      "main": [
        [
          {
            "node": "Split the result1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split the result1": {
      "main": [
        [
          {
            "node": "Get file content from GitHub1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get file content from GitHub1": {
      "main": [
        [
          {
            "node": "Convert files to JSON1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Convert files to JSON1": {
      "main": [
        [
          {
            "node": "Check for skipped Credentials",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Backup to Github": {
      "main": [
        [
          {
            "node": "getWorkflows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chron": {
      "main": [
        [
          {
            "node": "getWorkflows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "getWorkflows": {
      "main": [
        [
          {
            "node": "appendVars",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop": {
      "main": [
        []
      ]
    },
    "appendVars": {
      "main": [
        [
          {
            "node": "Loop",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-02-20T01:50:18.875Z",
  "execution_id": "29323",
  "id": "pxOwya2rKhKkX7x6",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Github",
  "nodes": [
    {
      "parameters": {
        "url": "={{ $json.download_url }}",
        "options": {}
      },
      "id": "ddae6568-07ff-4fc4-beb0-9122c4cec64a",
      "name": "Get File",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -660,
        1130
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 1,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "45ce825e-9fa6-430c-8931-9aaf22c42585",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              },
              "leftValue": "={{ $json.content }}",
              "rightValue": ""
            },
            {
              "id": "9619a55f-7fb1-4f24-b1a7-7aeb82365806",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              },
              "leftValue": "={{ $json.error }}",
              "rightValue": ""
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "9b1e3775-8057-4f44-bf6a-45a57d5cdcb6",
      "name": "If file too large",
      "type": "n8n-nodes-base.if",
      "position": [
        -880,
        1205
      ],
      "typeVersion": 2
    },
    {
      "parameters": {},
      "id": "eb8d6b36-71b8-4126-8b38-b7eff190ffb1",
      "name": "Merge Items",
      "type": "n8n-nodes-base.merge",
      "position": [
        -440,
        1280
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json.github_status}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "5cac5936-9e9c-4376-907e-995b6af851c4",
      "name": "Check Status",
      "type": "n8n-nodes-base.switch",
      "position": [
        0,
        1259
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "4aa61692-69b7-4910-bd11-ed2a364aeced",
      "name": "Same file - Do nothing",
      "type": "n8n-nodes-base.noOp",
      "position": [
        220,
        1080
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "658e4ca8-c32b-44d2-b7c8-e38e18aed842",
      "name": "File is different",
      "type": "n8n-nodes-base.noOp",
      "position": [
        220,
        1280
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "43c842bb-a5a1-45f5-abb4-daad8efb9c3a",
      "name": "File is new",
      "type": "n8n-nodes-base.noOp",
      "position": [
        220,
        1480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Globals').item.json.repo.owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Globals').item.json.repo.name }}"
        },
        "filePath": "={{ $('Globals').item.json.repo.path }}{{$('Process').first().json.id}}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "=Workflow: {{$('Process').first().json.name}} Exec_ID: {{ $('Process').first().json.execution_id }} ({{$json.github_status}})"
      },
      "id": "ab617a5c-9598-4629-bfeb-7b7a643a5175",
      "name": "Create new file",
      "type": "n8n-nodes-base.github",
      "position": [
        440,
        1480
      ],
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "bqnRc8rGYs6JvqnN",
          "name": "4mb1t10n"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Globals').item.json.repo.owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Globals').item.json.repo.name }}"
        },
        "filePath": "={{ $('Globals').item.json.repo.path }}{{$('Process').first().json.id}}.json",
        "fileContent": "={{$('isDiffOrNew').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "=Workflow: {{$('Process').first().json.name}} Exec_ID: {{ $('Process').first().json.execution_id }} ({{$json.github_status}})"
      },
      "id": "bd38f380-252e-4d1f-a7de-d68150f20b53",
      "name": "Edit existing file",
      "type": "n8n-nodes-base.github",
      "position": [
        440,
        1280
      ],
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "bqnRc8rGYs6JvqnN",
          "name": "4mb1t10n"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $json.repo.owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $json.repo.name }}"
        },
        "filePath": "={{ $json.repo.path }}{{ $('Process').item.json.id }}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "1565dc9e-acdb-4664-be43-b4a417920abc",
      "name": "Get file data",
      "type": "n8n-nodes-base.github",
      "position": [
        -1100,
        1205
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "credentials": {
        "githubApi": {
          "id": "bqnRc8rGYs6JvqnN",
          "name": "4mb1t10n"
        }
      },
      "continueOnFail": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6cf546c5-5737-4dbd-851b-17d68e0a3780",
              "name": "repo.owner",
              "type": "string",
              "value": "4mb1t10n"
            },
            {
              "id": "452efa28-2dc6-4ea3-a7a2-c35d100d0382",
              "name": "repo.name",
              "type": "string",
              "value": "n8n-backups"
            },
            {
              "id": "81c4dc54-86bf-4432-a23f-22c7ea831e74",
              "name": "repo.path",
              "type": "string",
              "value": "prod/"
            }
          ]
        },
        "options": {}
      },
      "id": "dfbdb055-9121-40db-b0a2-3e25027940dd",
      "name": "Globals",
      "type": "n8n-nodes-base.set",
      "position": [
        -1320,
        1205
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "jsCode": "const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();"
      },
      "id": "23647b5c-848c-4936-82dd-4a9b3785c55b",
      "name": "isDiffOrNew",
      "type": "n8n-nodes-base.code",
      "position": [
        -220,
        1280
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "id": "01a1f3cc-74d0-483a-91a6-af0e32d8c325",
      "name": "Process",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        -1540,
        1280
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "content": "## Restore from GitHub \nThis workflow will restore all instance workflows from GitHub backups.\n\n\n### Setup\nOpen `Globals` node and update the values below 👇\n\n- **repo.owner:** your Github username\n- **repo.name:** the name of your repository\n- **repo.path:** the folder to use within the repository.\n\n\nIf your username was `john-doe` and your repository was called `n8n-backups` and you wanted the workflows to go into a `workflows` folder you would set:\n\n- repo.owner - john-doe\n- repo.name - n8n-backups\n- repo.path - workflows/\n",
        "height": 420,
        "width": 320
      },
      "id": "db0b2de4-a78a-4370-a789-508f7cfd9a9d",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1940,
        1480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "url": "=https://api.github.com/repos/{{ $json.repo.owner }}/{{ $json.repo.name }}/contents/{{ $json.repo.path }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "githubApi",
        "options": {}
      },
      "id": "943d7b7d-e15b-4114-9891-c7258ada15c4",
      "name": "Get all files in given path",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1320,
        1740
      ],
      "typeVersion": 4.2,
      "credentials": {
        "githubApi": {
          "id": "bqnRc8rGYs6JvqnN",
          "name": "4mb1t10n"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "fieldToSplitOut": "path",
        "options": {}
      },
      "id": "7186d499-a623-499c-a534-0cab4410e41c",
      "name": "Split the result",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        -1100,
        1740
      ],
      "typeVersion": 1,
      "disabled": true
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "BeyondspaceStudio"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "n8n-backup"
        },
        "filePath": "={{ $('Get all files in given path').item.json.path }}",
        "additionalParameters": {}
      },
      "id": "3ba5b444-cc44-4fb3-aa0c-6b92c1a0c05b",
      "name": "Get file content from GitHub",
      "type": "n8n-nodes-base.github",
      "position": [
        -880,
        1740
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "credentials": {
        "githubApi": {
          "id": "bqnRc8rGYs6JvqnN",
          "name": "4mb1t10n"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "operation": "fromJson",
        "options": {}
      },
      "id": "67f34e81-768d-4c24-b0a2-71fef746b225",
      "name": "Convert files to JSON",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        -660,
        1740
      ],
      "typeVersion": 1,
      "disabled": true
    },
    {
      "parameters": {
        "operation": "create",
        "workflowObject": "={{ JSON.stringify($json.data) }}",
        "requestOptions": {}
      },
      "id": "c088bc94-f348-4d9d-b292-ed07e13e72cb",
      "name": "Restore n8n Workflows",
      "type": "n8n-nodes-base.n8n",
      "position": [
        -440,
        1740
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "qY8OP9lpzoxVpSpc",
          "name": "n8n-production"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6cf546c5-5737-4dbd-851b-17d68e0a3780",
              "name": "repo.owner",
              "type": "string",
              "value": "BeyondspaceStudio"
            },
            {
              "id": "452efa28-2dc6-4ea3-a7a2-c35d100d0382",
              "name": "repo.name",
              "type": "string",
              "value": "n8n-backup"
            },
            {
              "id": "81c4dc54-86bf-4432-a23f-22c7ea831e74",
              "name": "repo.path",
              "type": "string",
              "value": "workflows"
            }
          ]
        },
        "options": {}
      },
      "id": "bb9e6a03-423c-4c56-b67c-8e072013f547",
      "name": "Globals1",
      "type": "n8n-nodes-base.set",
      "position": [
        -1540,
        1740
      ],
      "typeVersion": 3.4,
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Restore from GitHub \nThis workflow will restore all instance credentials from GitHub backups.\n\n\n### Setup\nOpen `Globals` node and update the values below 👇\n\n- **repo.owner:** your Github username\n- **repo.name:** the name of your repository\n- **repo.path:** the folder to use within the repository.\n\n\nIf your username was `john-doe` and your repository was called `n8n-backups` and you wanted the credentials to go into a `credentials` folder you would set:\n\n- repo.owner - john-doe\n- repo.name - n8n-backups\n- repo.path - credentials/\n",
        "height": 420,
        "width": 320
      },
      "id": "9719e404-fe30-4fb5-9cf4-1be9a3826495",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1940,
        1980
      ],
      "typeVersion": 1,
      "disabled": true
    },
    {
      "parameters": {
        "resource": "credential",
        "name": "={{ $json.data.name }}",
        "credentialTypeName": "={{ $json.data.type }}",
        "data": "={{ JSON.stringify($json.data.data) }}",
        "requestOptions": {}
      },
      "id": "73b2ab33-273d-4efe-bb10-343c60f91849",
      "name": "Restore n8n Credentials",
      "type": "n8n-nodes-base.n8n",
      "position": [
        -220,
        2000
      ],
      "typeVersion": 1,
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "or",
          "conditions": [
            {
              "id": "ad031296-4ac0-4087-bc35-7975a2cc25e6",
              "operator": {
                "type": "object",
                "operation": "empty",
                "singleValue": true
              },
              "leftValue": "={{ $json.data }}",
              "rightValue": ""
            },
            {
              "id": "ca912a57-6a4b-4b9a-be0e-37b69d3e4917",
              "operator": {
                "type": "string",
                "operation": "contains"
              },
              "leftValue": "={{ $json.data.name }}",
              "rightValue": "n8n account"
            }
          ]
        },
        "options": {}
      },
      "id": "9f0c7195-7c21-4416-ac99-ca5c738f7065",
      "name": "Check for skipped Credentials",
      "type": "n8n-nodes-base.if",
      "position": [
        -440,
        2000
      ],
      "typeVersion": 2.2,
      "disabled": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6cf546c5-5737-4dbd-851b-17d68e0a3780",
              "name": "repo.owner",
              "type": "string",
              "value": "BeyondspaceStudio"
            },
            {
              "id": "452efa28-2dc6-4ea3-a7a2-c35d100d0382",
              "name": "repo.name",
              "type": "string",
              "value": "n8n-backup"
            },
            {
              "id": "81c4dc54-86bf-4432-a23f-22c7ea831e74",
              "name": "repo.path",
              "type": "string",
              "value": "credentials"
            }
          ]
        },
        "options": {}
      },
      "id": "7bc2eb67-4fe7-4ef6-9878-5e7527bb8b48",
      "name": "Globals2",
      "type": "n8n-nodes-base.set",
      "position": [
        -1540,
        2000
      ],
      "typeVersion": 3.4,
      "disabled": true
    },
    {
      "parameters": {
        "content": "## Skip credential\n- The empty json files\n- The n8n account api\n- ...edit this node at will",
        "color": 4
      },
      "id": "624f42cf-9b51-4fac-86c5-87054c307a63",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -500,
        2200
      ],
      "typeVersion": 1,
      "disabled": true
    },
    {
      "parameters": {
        "url": "=https://api.github.com/repos/{{ $json.repo.owner }}/{{ $json.repo.name }}/contents/{{ $json.repo.path }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "githubApi",
        "options": {}
      },
      "id": "a3986876-0b04-4050-8a71-c7bdfd091fb1",
      "name": "Get all files in given path1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -1320,
        2000
      ],
      "typeVersion": 4.2,
      "disabled": true
    },
    {
      "parameters": {
        "fieldToSplitOut": "path",
        "options": {}
      },
      "id": "fda1de11-52cb-4707-92f9-290098ed10ea",
      "name": "Split the result1",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        -1100,
        2000
      ],
      "typeVersion": 1,
      "disabled": true
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "BeyondspaceStudio"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "n8n-backup"
        },
        "filePath": "={{ $('Get all files in given path1').item.json.path }}",
        "additionalParameters": {}
      },
      "id": "e74b644d-d62e-4e7e-be32-6437fd935f71",
      "name": "Get file content from GitHub1",
      "type": "n8n-nodes-base.github",
      "position": [
        -880,
        2000
      ],
      "typeVersion": 1,
      "alwaysOutputData": true,
      "disabled": true
    },
    {
      "parameters": {
        "operation": "fromJson",
        "options": {}
      },
      "id": "ea0ea661-331a-4f13-8dab-3998eb8365a8",
      "name": "Convert files to JSON1",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        -660,
        2000
      ],
      "typeVersion": 1,
      "disabled": true
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -1540,
        620
      ],
      "id": "78d0f555-119e-4827-b183-47112f46d5c2",
      "name": "Backup to Github"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "hours",
              "hoursInterval": 2
            }
          ]
        }
      },
      "id": "30dadefe-d2c9-44fc-ae25-e18e0e54d808",
      "name": "Chron",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        -1540,
        820
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "60bd5bfa-dec4-415f-86c9-5f24262680ff",
      "name": "getWorkflows",
      "type": "n8n-nodes-base.n8n",
      "position": [
        -1320,
        720
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "qY8OP9lpzoxVpSpc",
          "name": "n8n-production"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "mode": "id",
          "value": "={{ $workflow.id }}"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {},
          "matchingColumns": [],
          "schema": [],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "mode": "each",
        "options": {
          "waitForSubWorkflow": false
        }
      },
      "id": "547503bd-0c53-4fce-9d32-7ec6b747d7e4",
      "name": "Loop",
      "type": "n8n-nodes-base.executeWorkflow",
      "position": [
        -880,
        720
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fbf8509c-35ab-4137-8470-4a04c6135c93",
              "name": "execution_id",
              "value": "={{ $execution.id }}",
              "type": "string"
            },
            {
              "id": "ab4c0e24-cfd2-4a2c-a632-81c3d11629ef",
              "name": "notes",
              "value": "",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -1100,
        720
      ],
      "id": "b8804037-a998-4101-b8c1-31183a5c54f7",
      "name": "appendVars"
    }
  ],
  "notes": "",
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": [
        20
      ]
    },
    "node:Chron": {
      "recurrenceRules": [
        20
      ]
    }
  },
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-04-09T21:01:00.997Z",
  "versionId": "d038375e-4811-4774-a603-e787457927d9"
}